using Gtk 4.0;
using Adw 1;

template $GraphsCurveFittingDialog : Adw.Dialog {
  content-width: 1000;
  content-height: 600;
  width-request: 400;
  height-request: 400;
  focus-widget: confirm_button;

  Adw.Breakpoint {
    condition ("max-width: 725sp")
    setters {
      split_view.collapsed: true;
    }
  }

  child: Adw.ToolbarView {
    top-bar-style: flat;
    content: Adw.OverlaySplitView split_view {
      show-sidebar: bind show_sidebar_button.active;
      sidebar: Adw.ToolbarView {
        [top]
        Adw.HeaderBar {
          styles ["flat"]
          title-widget: Adw.WindowTitle {
            title: _("Curve Fitting");
          };
          [end]
          MenuButton {
            icon-name: "view-more-symbolic";
            tooltip-text: _("Open Curve Fitting Menu");
            primary: true;
            menu-model: menu;
          }
        }
        ScrolledWindow {
          vexpand: true;
          width-request: 280;
          hscrollbar-policy: never;
          Box {
            vexpand: true;
            orientation: vertical;
            margin-start: 12;
            margin-end: 12;
            margin-bottom: 12;
            margin-top: 12;
            Adw.PreferencesGroup {
              Adw.ComboRow equation {
                title: _("Equation");
                model: StringList{
                  strings [
                    C_("regression-type", "Linear"),
                    C_("regression-type", "Quadratic"),
                    C_("regression-type", "Exponential"),
                    C_("regression-type", "Power Law"),
                    C_("regression-type", "Logarithmic"),
                    C_("regression-type", "Sigmoid Logistic"),
                    C_("regression-type", "Gaussian"),
                    C_("regression-type", "Custom"),
                  ]
                };
              }
              Adw.EntryRow custom_equation {
                visible: false;
                title: _("Y =");
              }
              Box fitting_params_box {
                margin-top: 12;
                margin-bottom: 12;
                spacing: 12;
                orientation: vertical;
              }
              ScrolledWindow {
                vexpand: false;
                hexpand: false;
                hscrollbar-policy: automatic;
                vscrollbar-policy: never;
                TextView text_view {
                  halign: fill;
                  top-margin: 12;
                  left-margin: 12;
                  bottom-margin: 12;
                  editable: false;
                  styles ["card"]
                }
              }
              Button confirm_button {
                margin-start: 12;
                margin-end: 12;
                margin-bottom: 12;
                margin-top: 12;
                label: _("Add Fit to Data");
                styles ["pill", "suggested-action"]
                clicked => $emit_add_fit_request();
              }
            }
          }
        }
      };
      content:
      Box {
      orientation: vertical;
        Adw.HeaderBar {
          styles ["flat"]
          show-title: false;
          ToggleButton show_sidebar_button {
            icon-name: "sidebar-show-symbolic";
            tooltip-text: _("Toggle Sidebar");
            active: bind split_view.show-sidebar;
            visible: bind split_view.collapsed;
          }
        }
        Adw.ToastOverlay toast_overlay {
          focusable: true;
          height-request: 150;
          width-request: 300;
          hexpand: true;
          child: Adw.StatusPage {
            icon-name: "dialog-error-symbolic";
            title: _("Canvas Failed to Load");
          };
        }
      };
    };
  };
}

menu menu {
  section {
    label: _("Optimization Method");
    item {
      // Translators: see https://world.pages.gitlab.gnome.org/Graphs/help/C/curve_fitting.html#algorithms
      label: C_("optimization", "Levenberg-Marquardt");
      action: "win.optimization";
      target: "lm";
    }
    item {
      // Translators: see https://world.pages.gitlab.gnome.org/Graphs/help/C/curve_fitting.html#algorithms
      label: C_("optimization", "Trust Region Reflective");
      action: "win.optimization";
      target: "trf";
    }
    item {
      // Translators: see https://world.pages.gitlab.gnome.org/Graphs/help/C/curve_fitting.html#algorithms
      label: C_("optimization", "Dogbox");
      action: "win.optimization";
      target: "dogbox";
    }
  }
  section {
    label: _("Confidence Bounds");
    item {
      label: C_("confidence", "None");
      action: "win.confidence";
      target: "none";
    }
    item {
      /* xgettext: no-c-format */
      label: C_("confidence", "1σ: 68% Confidence");
      action: "win.confidence";
      target: "1std";
    }
    item {
      /* xgettext: no-c-format */
      label: C_("confidence", "2σ: 95% Confidence");
      action: "win.confidence";
      target: "2std";
    }
    item {
      /* xgettext: no-c-format */
      label: C_("confidence", "3σ: 99.7% Confidence");
      action: "win.confidence";
      target: "3std";
    }
  }
}